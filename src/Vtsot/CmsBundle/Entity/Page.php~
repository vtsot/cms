<?php
namespace Vtsot\CmsBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Knp\DoctrineBehaviors\Model as ORMBehaviors;

/**
 * Page
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Vtsot\CmsBundle\Repository\PageRepository")
 */
class Page
{

//    use ORMBehaviors\Timestampable\Timestampable,
//        ORMBehaviors\Blameable\Blameable,
//        ORMBehaviors\SoftDeletable\SoftDeletable;

    /**
     * @var integer
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     **/
    private $id;

    /**
     * @var string $name
     * @ORM\Column(type="string", length=255, nullable=true, options={"comment"="Url"})
     * @Assert\Length(max=255)
     **/
    private $url;

    /**
     * @var string $name
     * @ORM\Column(type="string", length=255, nullable=true, options={"comment"="Мета title"})
     * @Assert\Length(max=255)
     **/
    private $metaTitle;

    /**
     * @var string $name
     * @ORM\Column(type="string", length=255, nullable=true, options={"comment"="Мета keywords"})
     * @Assert\Length(max=255)
     **/
    private $metaKeywords;

    /**
     * @var string $name
     * @ORM\Column(type="string", length=255, nullable=true, options={"comment"="Мета description"})
     * @Assert\Length(max=255)
     **/
    private $metaDescription;
    
    /**
     * @var string $name
     * @ORM\Column(type="string", length=255, options={"comment"="Название"})
     * @Assert\NotBlank(message="Не указано название.")
     * @Assert\Length(max=255)
     **/
    private $name;

    /**
     * @var string $about
     * @ORM\Column(type="string", length=255, nullable=true, options={"comment"="Краткое описание"})
     **/
    private $about;
    
    /**
     * @var string $description
     * @ORM\Column(type="string", length=255, nullable=true, options={"comment"="Подробное описание"})
     **/
    private $description;
    
    /**
     * @var string $rank
     * @ORM\Column(type="integer", nullable=true, options={"comment"="Индекс сортировки"})
     * @Assert\Range(min=1, max=9999999)
     **/
    private $rank;

    /**
     * @var boolean
     * @ORM\Column(type="boolean", nullable=true, options={"comment"="Отображение на сайте"})
     **/
    private $swSite;
    
    /**
     * object to string
     * @return string
     */
    public function __toString()
    {
        return (string)$this->getName();
    }
    
    /**
     * Конструктор
     */
    public function __construct()
    {
        $this->rank = 1000;
        $this->swSite = true;
    }

    

}